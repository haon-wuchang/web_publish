import React from 'react';
import '../styles/signup.css';
import { useState , useRef } from 'react';
import {validateSignup,handleDuplicateIdCheck,handlePassword} from '../utils/funcValidate.js';  
import { initSignup, useInitSignupRefs } from '../utils/funcInitialize.js';
import axios from 'axios';
import {useNavigate} from 'react-router-dom';

export default function Signup() {
    const navigate = useNavigate(); // 11-1.

    const {names,placehol,labels, initData} = initSignup();
    const {refs,msgRefs} = useInitSignupRefs(names);  

    const [formData, setFormData] = useState(initData);     
    const[idCheckResult,setIdCheckResult] = useState('default');  

    const handleForm = (event) => {
        const {name, value } = event.target;        
        setFormData({...formData, [name]:value});        
    }  

    const handleCheck = (event) => {
        event.preventDefault();
        if(validateSignup(refs,msgRefs)){  
            if(idCheckResult==='default'){
                alert('Ï§ëÎ≥µÏ≤¥ÌÅ¨ÏßÑÌñâÌï¥');
                return false;
            } else {
                console.log(formData);   
                // 1.  formDataÎ•º ÏÑúÎ≤ÑÏóê Î≥¥ÎÇ∏Îã§
                    // axios.post('Í≤ΩÎ°ú',{Ï†ÑÏÜ°Ìï†Í∞ùÏ≤¥})
                    //     .then(insertÏÑ±Í≥µÏãú Í≤∞Í≥ºÎ∞õÏïÑÏò¥)
                    //     .catch();
                    // Ï†ÑÏÜ°Ìï†Í∞ùÏ≤¥ => Ïª®Ìä∏Î°§Îü¨ÏóêÏÑú Î∞õÏúºÎ©¥ ÎêúÎã§
                    // formData ÏûêÏ≤¥Í∞Ä {} Ïù¥ÎãàÍπå {formdata} Ïù¥ÏºÄÌïòÎ©¥ ÏïàÎåê!!!!
                axios.post('http://localhost:9000/member/signup',formData)
                // 9. Í≤∞Í≥ºÍ∞íÏù¥ then ÏúºÎ°ú ÎÑòÏñ¥Ïò®Îã§
                    .then(res => {
                        if(res.data.result_rows === 1){ // affectedRows Í∞Ä 1Ïù¥Î©¥ Í∞í Ïûò ÎÑòÏñ¥Ïò®Í±∞ÎãàÍπå
                            alert('ÌöåÏõêÍ∞ÄÏûÖÏÑ±Í≥µ');
                            // 11. ÌöåÏõêÍ∞ÄÏûÖ ÏÑ±Í≥µ Ïãú Î°úÍ∑∏Ïù∏ÌéòÏù¥ÏßÄÎ°ú Ïù¥ÎèôÎêòÍ≤å ÏûëÏóÖ
                                // react ÏóêÏÑú ÌéòÏù¥ÏßÄ Ïù¥Îèô => useNavigate() ÏÇ¨Ïö© (react-router-dom)
                                navigate('/login');
                            


                        } else{
                            alert('ÌöåÏõêÍ∞ÄÏûÖ Ïã§Ìå®');
                        }
                        // console.log('resdata============',res.data)
                    })                     
                    .catch(error => {  // 10. ÎÑ§Ìä∏ÏõåÌÅ¨ ÏóêÎü¨ÏãúÏóêÎèÑ ÌöåÏõêÍ∞ÄÏûÖ Ïã§Ìå®ÎãàÍπå ÎÇ¥Ïö©Ï∂îÍ∞Ä
                        alert('ÌöåÏõêÍ∞ÄÏûÖ Ïã§Ìå®');
                        console.log(error);                        
                    });
            }
        } 
    }    




/*
    üí•üí• Îã§Ïô∏ÏõåÎûë
    get Î∞©Ïãù : url ÏùÑ ÌÜµÌï¥ÏÑú Ìò∏Ï∂ú Î∞è Îç∞Ïù¥ÌÑ∞ Ï†ÑÎã¨ => ÎÑ§Ìä∏ÏõåÌÅ¨Î•º ÌÜµÌï¥ÏÑú ÎÑòÏñ¥Í∞àÎïå Ìå®ÌÇ∑Ïùò Ìó§ÎçîÏóê Î∂ôÏñ¥ÏÑú ÎÑòÏñ¥Í∞ê
        => ÏÑúÎ≤ÑÏóêÏÑú Î∞õÏùÑÎïå req.params Î°ú Î∞õÎäîÎã§
        => /product/:id => :id Ïù¥Í±∞Îäî getÏóêÏÑúÎßå ÏÇ¨Ïö©Í∞ÄÎä•
        => Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûëÏùÑÎïå , Î≥¥ÏïàÏù¥ ÌïÑÏöîÌïòÏßÄÏïäÏùÑÎïå ÏÇ¨Ïö© (ÌöåÏõêÍ∞ÄÏûÖ,Î°úÍ∑∏Ïù∏ÏóêÎäî ÏÇ¨Ïö©Í∏àÏßÄ!)
    post Î∞©Ïãù : url Ï£ºÏÜåÎ°ú Í≤ΩÎ°úÍ∞Ä Ìò∏Ï∂úÎêòÍ≥†, Îç∞Ïù¥ÌÑ∞Ï†ÑÎã¨ÏùÄ Ìå®ÌÇ∑Ïùò Î∞îÎîîÏóê Î∂ôÏñ¥ÏÑú ÎÑòÏñ¥Í∞ê
        => req.body Î°ú Î∞õÏùå
        => Îç∞Ïù¥ÌÑ∞Í∞Ä ÌÅ¥Îïå, Î≥¥ÏïàÏù¥ ÌïÑÏöîÌï† Îïå ÏÇ¨Ïö©(Î°úÍ∑∏Ïù∏,ÌöåÏõêÍ∞ÄÏûÖÌéòÏù¥ÏßÄ)
        */

    return (
        <div className="content">
            <h1 className="center-title">SIGINUP</h1>
            <form onSubmit={handleCheck} className="signup-form">
                <ul>
                    {
                        names && names.map((name)=> (
                                <li>
                                    <label for="" ><b>{labels[name]}</b></label>
                                    <span ref={msgRefs.current[name.concat('MsgRef')]}>{labels[name]} ÏùÑ/Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî</span>
                                    <div>
                                        {(name === 'emailname') ? 
                                            (
                                                <>
                                                <input type="text" 
                                                    name={name}
                                                    onChange={handleForm}
                                                    ref = {refs.current[name.concat('Ref')]}  
                                                    placeholder={placehol[name]} />
                                                <span>@</span>       
                                                <select name="emaildomain" 
                                                        onChange={handleForm} 
                                                        ref = {refs.current['emaildomainRef']} > 
                                                    <option value="default">ÏÑ†ÌÉù</option>
                                                    <option value="naver.com">naver.com</option>
                                                    <option value="gmail.com">gmail.com</option>
                                                    <option value="daum.net">daum.net</option>
                                                </select>
                                                </>
                                            ): 
                                            (
                                                <>
                                                <input type= {  // pwd,cpwd Îäî type=password Î°ú ÎÇòÎ®∏ÏßÄÎäî text Î°ú
                                                        (name==='pwd' || name==='cpwd') ? 'password': 'text'  }                                                                                                                                                                                                                        
                                                    name={name}
                                                    onChange={handleForm}
                                                    onBlur={(name==='cpwd')? ()=>{handlePassword(
                                                        // refs,msgRefs Ïù¥ÏºÄÌï¥ÎèÑ ÎêòÎçòÎéÖ ?? „Öá„Öá ÏñòÎÑ§ ÎßéÏïÑÏßÄÎ©¥ Í±ç refs Ïù¥ÏºÄ ÎÑòÍ≤®ÎèÑÎåï„Ñ∑Îåï
                                                        refs.current['pwdRef'],
                                                        refs.current['cpwdRef'],
                                                        refs.current['nameRef'],
                                                        msgRefs.current['pwdRef'],
                                                        msgRefs.current['cpwdRef']
                                                    )} : null                                                    
                                                    }
                                                    ref = {refs.current[name.concat('Ref')]}
                                                    placeholder = {placehol[name]} /> 
                                                    { name==='id' && 
                                                    <>
                                                        <button type="button" 
                                                            onClick={()=>{handleDuplicateIdCheck(
                                                                    refs.current['idRef'],
                                                                    msgRefs.current['idMsgRef'],
                                                                    refs.current['pwdRef'],
                                                                    setIdCheckResult
                                                                )   
                                                            }}>
                                                        Ï§ëÎ≥µÌôïÏù∏</button>
                                                        <input type="hidden" 
                                                            value={idCheckResult} />
                                                    </>
                                                    }
                                                </>
                                            )
                                        }
                                    </div>
                                </li>
                        ) )  // map end                                            
                    }
                    <li>
                        <button type="submit">Í∞ÄÏûÖÌïòÍ∏∞</button>
                        <button type="reset">Í∞ÄÏûÖÏ∑®ÏÜå</button>
                    </li>
                </ul>
            </form>
        </div>
    );
}


